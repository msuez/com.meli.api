{
  "/Users/matiassuez/Desktop/Workspace/Resources/Software/Event-Driven Architectures/Meli Challenge/com.meli.api": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/Users/matiassuez/Desktop/Workspace/Resources/Software/Event-Driven Architectures/Meli Challenge/com.meli.api",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "com-meli-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "MeliChallengeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/com-meli-api-dev-meliChallenge"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "com-meli-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/com-meli-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/com-meli-api-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "com-meli-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "MeliChallengeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-31c9e456-3add",
                  "S3Key": "serverless/com-meli-api/dev/1731433888722-2024-11-12T17:51:28.722Z/com-meli-api-meliChallenge.zip"
                },
                "Handler": "dist/app.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "com-meli-api-dev-meliChallenge",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MeliChallengeLogGroup"
              ]
            },
            "MeliChallengeLambdaVersionRkb4RDTuqeBS3QpV5dsN8Nn2s43Fb6M8r6nNOPEq3pc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MeliChallengeLambdaFunction"
                },
                "CodeSha256": "azBR9qgDvP2WJe2mnLFxB1TLP7lPyc3NwJPUC7IcQV4="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-com-meli-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProxyVarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MeliChallengeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MeliChallengeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1731433879751": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodProxyVarOptions",
                "ApiGatewayMethodProxyVarAny"
              ]
            },
            "MeliChallengeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MeliChallengeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-31c9e456-3add",
              "Export": {
                "Name": "sls-com-meli-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "MeliChallengeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MeliChallengeLambdaVersionRkb4RDTuqeBS3QpV5dsN8Nn2s43Fb6M8r6nNOPEq3pc"
              },
              "Export": {
                "Name": "sls-com-meli-api-dev-MeliChallengeLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-com-meli-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "meliChallenge": {
          "handler": "dist/app.handler",
          "events": [
            {
              "http": {
                "path": "{proxy+}",
                "method": "any",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "ANY"
                  ],
                  "headers": [
                    "Content-Type"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "com-meli-api-dev-meliChallenge",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {
            "artifact": "/Users/matiassuez/Desktop/Workspace/Resources/Software/Event-Driven Architectures/Meli Challenge/com.meli.api/.serverless/build/com-meli-api-meliChallenge.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "MeliChallengeLambdaVersionRkb4RDTuqeBS3QpV5dsN8Nn2s43Fb6M8r6nNOPEq3pc"
        }
      },
      "build": {
        "esbuild": {
          "bundle": true,
          "minify": false,
          "sourcemap": true,
          "target": "node20",
          "platform": "node",
          "external": [
            "express",
            "cors",
            "swagger-ui-express"
          ],
          "entryPoints": [
            "src/app.ts",
            "src/config/swagger.ts",
            "src/routes/*.ts"
          ]
        }
      },
      "package": {
        "individually": true,
        "include": [
          "src/**/*.ts",
          "dist/**/*.js",
          "src/routes/**/*.ts"
        ],
        "artifactsS3KeyDirname": "serverless/com-meli-api/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-31c9e456-3add",
        "artifactDirectoryName": "serverless/com-meli-api/dev/1731433888722-2024-11-12T17:51:28.722Z"
      }
    },
    "serviceRawFile": "service: com-meli-api\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  region: us-east-1\n\nfunctions:\n  meliChallenge:\n    handler: dist/app.handler\n    events:\n      - http:\n          path: /{proxy+}\n          method: any\n          cors:\n            origin: \"*\"\n            headers:\n              - Content-Type\n\nbuild:\n  esbuild:\n    bundle: true\n    minify: false\n    sourcemap: true\n    target: 'node20'\n    platform: 'node'\n    external:\n      - express\n      - cors\n      - swagger-ui-express\n    entryPoints:\n      - src/app.ts\n      - src/config/swagger.ts\n      - src/routes/*.ts\n\npackage:\n  individually: true\n  include:\n    - src/**/*.ts\n    - dist/**/*.js\n    - src/routes/**/*.ts\n",
    "command": [
      "deploy"
    ],
    "options": {
      "force": true
    },
    "error": null,
    "params": {},
    "machineId": "9573a9383f3e83db2b03870b2ef51330",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "650cdd5d-b03b-41b6-a721-7f8d1dd42fec",
    "orgName": "matisuez",
    "userId": "KV2S7HkgVlVmWcDSY0",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "matisuez",
    "subscription": null,
    "userEmail": "matisuez@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "780673962482",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "com-meli-api-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:780673962482:stack/com-meli-api-dev/40290100-a11c-11ef-a311-0e471478119b",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:780673962482:stack/com-meli-api-dev/40290100-a11c-11ef-a311-0e471478119b",
    "serviceProviderAwsCfStackCreated": "2024-11-12T17:33:38.059Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-12T17:51:58.622Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "MeliChallengeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:780673962482:function:com-meli-api-dev-meliChallenge:76",
        "Description": "Current Lambda function version",
        "ExportName": "sls-com-meli-api-dev-MeliChallengeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://3nwjzqq590.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-com-meli-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-31c9e456-3add",
        "ExportName": "sls-com-meli-api-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}